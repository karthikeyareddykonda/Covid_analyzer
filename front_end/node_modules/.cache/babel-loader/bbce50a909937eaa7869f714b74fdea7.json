{"ast":null,"code":"var _jsxFileName = \"/home/karthikeya/Desktop/cs387/project/front/src/Country/Country_info.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { BrowserRouter as Router, Routes, Route, Link, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Country_info extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"India\"\n    };\n    console.log(\"This is country constructor\");\n  }\n\n  componentDidMount() {// do nothing as of now \n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Country page \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nclass Playerinfo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      player_id: this.props.player_id,\n      player_data: [],\n      match_stats: [],\n      bat_stats: [],\n      match_ids: [],\n      bowl_matchids: [],\n      bowl_nmatches: 0,\n      bowl_match_wickets: [],\n      bat_runs: [],\n      bowl_runs: [],\n      bowl_balls: 0,\n      bowl_overs: 0,\n      bowl_wickets: 0,\n      bowl_economy: 0,\n      bowl_fivewickets: 0,\n      num_matches: 0,\n      total_runs: 0,\n      num_runs_four: 0,\n      num_runs_six: 0,\n      num_fifty: 0,\n      highest_score: 0,\n      strike_rate: 0,\n      avg: 0,\n      data_loaded: false,\n      display_batstats: false,\n      prompt_string1: \"Display bat stats\",\n      display_bowlstats: false,\n      prompt_string2: \"Display bowl stats\",\n      req1: false,\n      req2: false,\n      req3: false\n    };\n    console.log('construcor called', this.props.params);\n    this.batting_stats_display = this.batting_stats_display.bind(this);\n    this.prepare_batstats = this.prepare_batstats.bind(this);\n    this.prepare_bowlstats = this.prepare_bowlstats.bind(this);\n    this.bowling_stats_display = this.bowling_stats_display.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(`http://localhost:3001/player/${this.props.params.player_id}`).then(Response => Response.json()).then(json => {\n      this.setState({\n        player_data: json,\n        req1: true\n      });\n      console.log('fetch1 called'); // console.log(Object.values(json)[0])\n      // console.log(Object.values(json).length)\n    });\n    fetch(`http://localhost:3001/player/${this.props.params.player_id}/batting_stats`).then(Response => Response.json()).then(json => {\n      var matches = [];\n      var runs = [];\n      var four_runs = 0,\n          six_runs = 0,\n          no_fifty = 0,\n          max_score = 0;\n      var n_matches = json.length,\n          n_balls = 0;\n      var tot_runs = 0;\n\n      for (var i = 0; i < json.length; i++) {\n        matches[i] = json[i].match_id;\n        runs[i] = parseInt(json[i].runs);\n        four_runs += parseInt(json[i].fours);\n        six_runs += parseInt(json[i].sixes);\n        if (runs[i] >= 50) no_fifty += 1;\n        max_score = Math.max(max_score, runs[i]);\n        tot_runs += runs[i];\n        n_balls += parseInt(json[i].balls);\n      }\n\n      console.log(\"data from backend\", json.length);\n      var Strike_rate = \"NA due to no ball played\";\n      var calc_avg = \"Na due to always not outs\";\n\n      if (n_balls !== 0) {\n        Strike_rate = (tot_runs * 100.0 / n_balls).toFixed(2).toString();\n      }\n\n      if (n_matches !== 0) {\n        calc_avg = (tot_runs / n_matches).toFixed(2).toString();\n      }\n\n      console.log(\"Runs from mount\", runs);\n      console.log(\"Data from setting\", matches);\n      this.setState({\n        bat_runs: runs,\n        match_ids: matches,\n        num_matches: n_matches,\n        total_runs: tot_runs,\n        num_runs_four: four_runs * 4,\n        num_runs_six: six_runs * 6,\n        num_fifty: no_fifty,\n        highest_score: max_score,\n        strike_rate: Strike_rate,\n        avg: calc_avg,\n        req2: true\n      });\n      console.log('fetch2 called');\n      console.log(Object.values(json)[0]);\n      console.log(Object.values(json).length);\n    }); //console.log(this.state.match_details)\n\n    fetch(`http://localhost:3001/player/${this.props.params.player_id}/bowling_stats`).then(Response => Response.json()).then(json => {\n      var matches = [],\n          n_balls = [],\n          n_runs = [],\n          n_wickets = [];\n      var n_overs = 0,\n          tot_wickets = 0,\n          n_fivewickets = 0,\n          tot_runs = 0,\n          tot_balls = 0;\n\n      for (var i = 0; i < json.length; i++) {\n        matches[i] = json[i].match_id;\n        n_runs[i] = parseInt(json[i].runs);\n        n_balls[i] = parseInt(json[i].balls);\n        n_wickets[i] = parseInt(json[i].wickets);\n        tot_wickets += n_wickets[i];\n        n_overs += parseInt(json[i].overs);\n        if (n_wickets[i] >= 5) n_fivewickets += 1;\n        tot_runs += n_runs[i];\n        tot_balls += n_balls[i];\n      }\n\n      var eco = \"NA\";\n      console.log(\"Data from bowling\", json);\n\n      if (n_overs !== 0) {\n        eco = (tot_runs / n_overs).toFixed(2).toString();\n      } //console.log(\"bowling runs\",n_runs);\n\n\n      this.setState({\n        bowl_matchids: matches,\n        bowl_runs: n_runs,\n        bowl_balls: tot_balls,\n        bowl_overs: n_overs,\n        bowl_wickets: tot_wickets,\n        bowl_economy: eco,\n        bowl_fivewickets: n_fivewickets,\n        bowl_nmatches: matches.length,\n        bowl_match_wickets: n_wickets,\n        data_loaded: true,\n        req3: true\n      });\n      console.log('fetch3 called');\n    });\n  }\n\n  prepare_batstats() {\n    //console.log(\"This function called\");\n    if (this.state.display_batstats) {\n      this.setState({\n        display_batstats: false,\n        prompt_string1: \"display bat stats\"\n      });\n    } else {\n      this.setState({\n        display_batstats: true,\n        prompt_string1: \"Hide display bat stats\"\n      });\n    }\n  }\n\n  batting_stats_display() {\n    if (!this.state.display_batstats) return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n    var cols = [];\n    const runs = this.state.bat_runs;\n    console.log(\"display bat stats called\", runs);\n\n    for (var i = 0; i < runs.length; i++) {\n      if (runs[i] < 20) cols[i] = \"red\";else if (runs[i] < 30) cols[i] = \"green\";else if (runs[i] < 50) cols[i] = \"blue\";else if (runs[i] >= 50) cols[i] = \"yellow\";\n    }\n\n    var state = {\n      labels: this.state.match_ids,\n      datasets: [{\n        label: 'Runs',\n        backgroundColor: cols,\n        borderColor: 'rgba(0,0,0,1)',\n        borderWidth: 2,\n        data: runs\n      }, {\n        label: ' < 20',\n        backgroundColor: 'red'\n      }, {\n        label: ' <30',\n        backgroundColor: 'green'\n      }, {\n        label: ' <50',\n        backgroundColor: 'blue'\n      }, {\n        label: '>= 50',\n        backgroundColor: 'yellow'\n      }]\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"300px\",\n        width: \"80%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Bar, {\n        data: state,\n        options: {\n          title: {\n            display: true,\n            text: 'Average Rainfall per month',\n            fontSize: 20\n          },\n          legend: {\n            display: true,\n            position: 'right'\n          },\n          scaleOverride: true,\n          scaleSteps: 10,\n          scaleStepWidth: 1,\n          scaleStartValue: 0,\n          barShowStroke: false,\n          barStrokeWidth: 1,\n          showTooltips: false,\n          barValueSpacing: 2,\n          animation: false,\n          responsive: true,\n          maintainAspectRatio: true\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 13\n    }, this);\n  }\n\n  prepare_bowlstats() {\n    if (this.state.display_bowlstats) {\n      this.setState({\n        display_bowlstats: false,\n        prompt_string2: \" display bowl stats\"\n      });\n    } else {\n      this.setState({\n        display_bowlstats: true,\n        prompt_string2: \" hide display bowl stats\"\n      });\n    }\n  }\n\n  bowling_stats_display() {\n    if (!this.state.display_bowlstats) return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n    console.log(\"Printing from player\", this.state.bowl_runs);\n    console.log(this.state.match_ids);\n    const state = {\n      labels: this.state.bowl_matchids,\n      datasets: [{\n        label: 'Bowling stats',\n        yAxisID: 'A',\n        backgroundColor: 'rgba(75,192,192,0.5)',\n        borderColor: 'rgba(0,0,0,1)',\n        borderWidth: 2,\n        data: this.state.bowl_runs\n      }, {\n        type: 'line',\n        label: 'Wickets',\n        yAxisID: 'B',\n        backgroundColor: 'rgba(0,0,0,1)',\n        borderColor: 'rgba(0,0,0,1)',\n        borderWidth: 2,\n        data: this.state.bowl_match_wickets,\n        pointRadius: 5\n      }]\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"300px\",\n        width: \"80%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Bar, {\n        data: state,\n        options: {\n          title: {\n            display: true,\n            text: 'Average Rainfall per month',\n            fontSize: 20\n          },\n          legend: {\n            display: true,\n            position: 'right'\n          },\n          displayPosition: true,\n          scales: {\n            yAxis: {\n              id: 'A',\n              type: 'linear',\n              position: 'Right'\n            }\n          },\n          maintainAspectRatio: false\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 13\n    }, this);\n  }\n\n  render() {\n    if (!(this.state.req1 && this.state.req2 && this.state.req3)) return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Data not loaded\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 78\n    }, this);\n    const mydata = this.state.player_data[0];\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            \"text-align\": 'center'\n          },\n          children: \"Player Basic Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Player name : \", mydata.player_name, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Country : \", mydata.country_name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Batting Style : \", mydata.batting_hand]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Bowling Skill :\", mydata.bowling_skill]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            \"text-align\": 'center'\n          },\n          children: \"Player Batting statistics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\" Matches : \", this.state.num_matches]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\" Runs : \", this.state.total_runs]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\" Four : \", this.state.num_runs_four]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\" Six : \", this.state.num_runs_six]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\" Fifty : \", this.state.num_fifty]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\" Hs : \", this.state.highest_score]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\" Strike Rate : \", this.state.strike_rate]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\" Average : \", this.state.avg]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 16\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.prepare_batstats,\n          children: this.state.prompt_string1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(this.batting_stats_display, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            \"text-align\": 'center'\n          },\n          children: \"Player Bowling statistics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Matches : \", this.state.bowl_nmatches]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Runs : \", this.state.bowl_balls]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Overs :\", this.state.bowl_overs]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Wickets : \", this.state.bowl_wickets]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Economy : \", this.state.bowl_economy]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Five Wickets : \", this.state.bowl_fivewickets]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.prepare_bowlstats,\n          children: this.state.prompt_string2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(this.bowling_stats_display, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default _s(props => {\n  _s();\n\n  return /*#__PURE__*/_jsxDEV(Playerinfo, { ...props,\n    params: useParams()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 514,\n    columnNumber: 5\n  }, this);\n}, \"zmUErVVHtqqM6DIDQ9M8H17P2nM=\", false, function () {\n  return [useParams];\n});","map":{"version":3,"sources":["/home/karthikeya/Desktop/cs387/project/front/src/Country/Country_info.js"],"names":["React","BrowserRouter","Router","Routes","Route","Link","useParams","Country_info","Component","constructor","props","state","name","console","log","componentDidMount","render","Playerinfo","player_id","player_data","match_stats","bat_stats","match_ids","bowl_matchids","bowl_nmatches","bowl_match_wickets","bat_runs","bowl_runs","bowl_balls","bowl_overs","bowl_wickets","bowl_economy","bowl_fivewickets","num_matches","total_runs","num_runs_four","num_runs_six","num_fifty","highest_score","strike_rate","avg","data_loaded","display_batstats","prompt_string1","display_bowlstats","prompt_string2","req1","req2","req3","params","batting_stats_display","bind","prepare_batstats","prepare_bowlstats","bowling_stats_display","fetch","then","Response","json","setState","matches","runs","four_runs","six_runs","no_fifty","max_score","n_matches","length","n_balls","tot_runs","i","match_id","parseInt","fours","sixes","Math","max","balls","Strike_rate","calc_avg","toFixed","toString","Object","values","n_runs","n_wickets","n_overs","tot_wickets","n_fivewickets","tot_balls","wickets","overs","eco","cols","labels","datasets","label","backgroundColor","borderColor","borderWidth","data","height","width","title","display","text","fontSize","legend","position","scaleOverride","scaleSteps","scaleStepWidth","scaleStartValue","barShowStroke","barStrokeWidth","showTooltips","barValueSpacing","animation","responsive","maintainAspectRatio","yAxisID","type","pointRadius","displayPosition","scales","yAxis","id","mydata","player_name","country_name","batting_hand","bowling_skill"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport {\n    BrowserRouter as Router ,\n    Routes,\n    Route,\n    Link,\n    useParams\n  \n  } from 'react-router-dom' ;\n\n\nclass Country_info extends React.Component{\n\n    constructor(props){\n\n        super(props); \n\n        this.state = {\n            name : \"India\"\n        }\n\n        console.log(\"This is country constructor\") ;\n\n    }\n\n    componentDidMount(){\n\n        // do nothing as of now \n\n    }\n\n    render(){\n\n\n        return(\n\n            <>\n            \n            \n            \n                <h1> Country page </h1>\n            \n            \n            \n            </>\n\n\n\n\n\n        )\n    }\n\n}\n\nclass Playerinfo extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state ={\n\n            player_id : this.props.player_id,\n            player_data : [],\n            match_stats : [],\n            bat_stats: [],\n            match_ids : [],\n            bowl_matchids : [],\n            bowl_nmatches : 0,\n            bowl_match_wickets : [],\n            bat_runs : [],\n            bowl_runs : [],\n            bowl_balls : 0,\n            bowl_overs : 0,\n            bowl_wickets : 0 ,\n            bowl_economy : 0,\n            bowl_fivewickets : 0,\n            num_matches : 0,\n            total_runs : 0,\n            num_runs_four : 0,\n            num_runs_six : 0,\n            num_fifty : 0,\n            highest_score : 0,\n            strike_rate: 0,\n            avg : 0,\n            data_loaded : false,\n            display_batstats : false,\n            prompt_string1 : \"Display bat stats\",\n            display_bowlstats : false,\n            prompt_string2 : \"Display bowl stats\",\n            req1 : false,\n            req2 : false,\n            req3 : false\n            \n\n\n        }\n        console.log('construcor called', this.props.params);\n        \n        this.batting_stats_display = this.batting_stats_display.bind(this);\n        this.prepare_batstats = this.prepare_batstats.bind(this);\n\n        this.prepare_bowlstats = this.prepare_bowlstats.bind(this);\n\n        this.bowling_stats_display = this.bowling_stats_display.bind(this);\n    }\n\n\n    componentDidMount(){\n\n        fetch(`http://localhost:3001/player/${this.props.params.player_id}`)\n        .then((Response) => Response.json())\n        .then((json) => {\n\n            this.setState ({\n\n                player_data : json,\n             \n                req1 : true\n\n            });\n            console.log('fetch1 called')\n           // console.log(Object.values(json)[0])\n           // console.log(Object.values(json).length)\n\n        })\n\n        fetch(`http://localhost:3001/player/${this.props.params.player_id}/batting_stats`)\n        .then((Response) => Response.json())\n        .then((json) => {\n\n            var matches = [] ; var runs = [] ;\n            var four_runs = 0 , six_runs =0, no_fifty = 0 , max_score = 0; \n            var n_matches = json.length , n_balls = 0;\n            var tot_runs = 0;\n            for(var i = 0; i<json.length ;i++){\n                matches[i] = json[i].match_id ;\n                runs[i] = parseInt(json[i].runs);\n                four_runs += parseInt(json[i].fours);\n                six_runs += parseInt(json[i].sixes);\n\n                if( runs[i] >= 50 ) no_fifty += 1 ;\n\n                max_score = Math.max(max_score,runs[i]);\n                tot_runs += runs[i];\n                n_balls += parseInt(json[i].balls);\n\n\n            }\n            console.log(\"data from backend\",json.length)\n\n            var Strike_rate = \"NA due to no ball played\";\n            var calc_avg = \"Na due to always not outs\" ;\n            if(n_balls !== 0){\n                Strike_rate = (tot_runs*100.0/n_balls).toFixed(2).toString();\n            }\n\n            if(n_matches !== 0){\n\n                calc_avg = (tot_runs/n_matches).toFixed(2).toString();\n\n            }\n\n            console.log(\"Runs from mount\",runs);\n            console.log(\"Data from setting\",matches)\n\n            this.setState ({\n                bat_runs : runs ,\n                match_ids : matches,\n                num_matches : n_matches,\n                total_runs : tot_runs,\n                num_runs_four : four_runs*4 ,\n                num_runs_six : six_runs*6,\n                num_fifty : no_fifty,\n                highest_score : max_score,\n                strike_rate : Strike_rate,\n                avg :calc_avg  ,\n               \n                req2 : true\n\n            });\n            console.log('fetch2 called');\n           console.log(Object.values(json)[0])\n            console.log(Object.values(json).length)\n\n        })\n       \n        \n        //console.log(this.state.match_details)\n\n        fetch( `http://localhost:3001/player/${this.props.params.player_id}/bowling_stats`)\n        .then((Response) =>Response.json())\n        .then((json) =>{\n\n            var matches = [] , n_balls = [] , n_runs =[], n_wickets = [] ;\n            var n_overs = 0 , tot_wickets = 0, n_fivewickets = 0 , tot_runs =0 , tot_balls =0;\n\n            for(var i =0;i<json.length ;i++){\n\n                matches[i] = json[i].match_id ;   \n                n_runs[i] = parseInt(json[i].runs);\n                n_balls[i] = parseInt(json[i].balls);\n                n_wickets[i] = parseInt(json[i].wickets);\n\n                tot_wickets += n_wickets[i];\n                n_overs += parseInt(json[i].overs);\n\n                if(n_wickets[i] >= 5 ) n_fivewickets += 1;\n\n                tot_runs += n_runs[i];\n                tot_balls += n_balls[i] ;\n\n            }\n\n            var eco = \"NA\"\n            console.log(\"Data from bowling\", json);\n            if(n_overs !== 0){\n                eco = (tot_runs/n_overs).toFixed(2).toString();\n            }\n            //console.log(\"bowling runs\",n_runs);\n            this.setState({\n\n\n                bowl_matchids : matches,\n                bowl_runs : n_runs,\n                bowl_balls : tot_balls,\n                bowl_overs : n_overs,\n                bowl_wickets : tot_wickets ,\n                bowl_economy : eco,\n                bowl_fivewickets : n_fivewickets,\n                bowl_nmatches : matches.length,\n                bowl_match_wickets : n_wickets,\n                data_loaded : true,\n                req3 : true\n\n            })\n\n\n           \n            console.log('fetch3 called')\n\n\n\n\n        })\n\n\n    }\n\n    prepare_batstats(){\n        //console.log(\"This function called\");\n        if(this.state.display_batstats){\n            this.setState({\n                display_batstats : false,\n                prompt_string1 : \"display bat stats\"\n            })\n        }\n        else{\n            this.setState({\n                display_batstats : true,\n                prompt_string1 : \"Hide display bat stats\"\n            })\n\n\n        }\n\n    }\n    batting_stats_display(){\n\n        if(!this.state.display_batstats) return (<></>)\n        var cols = [];\n        const runs = this.state.bat_runs;\n        console.log(\"display bat stats called\",runs);\n        for(var i =0;i< runs.length ;i++){\n\n            if(runs[i] <20 )cols[i] = \"red\" ;\n            else if(runs[i] < 30) cols[i] = \"green\";\n            else if(runs[i] < 50) cols[i] = \"blue\";\n            else if(runs[i] >= 50) cols[i] = \"yellow\";\n\n\n\n        }\n\n\n        var state = {\n            labels: this.state.match_ids,\n            datasets: [\n              {\n                label: 'Runs',\n                backgroundColor: cols,\n                borderColor: 'rgba(0,0,0,1)',\n                borderWidth: 2,\n                data: runs\n              },\n              {\n                label : ' < 20',\n                backgroundColor: 'red' \n              },\n              {\n                label : ' <30',\n                backgroundColor : 'green'\n              },\n              {\n                label : ' <50',\n                backgroundColor : 'blue'\n              },\n              {\n                label : '>= 50',\n                backgroundColor : 'yellow'\n              }\n            ]\n          }\n\n\n\n          return (\n            <div style={{height: \"300px\", width :\"80%\"}}>\n              <Bar\n                data={state}\n                options={{\n                  title:{\n                    display:true,\n                    text:'Average Rainfall per month',\n                    fontSize:20\n                  },\n                  legend:{\n                    display:true,\n                    position:'right'\n                  },\n                  scaleOverride : true,\n                  scaleSteps : 10,\n                  scaleStepWidth : 1,\n                  scaleStartValue : 0,\n                  barShowStroke : false,\n                  barStrokeWidth : 1,\n                  showTooltips : false,\n                  barValueSpacing : 2,\n                  animation : false,\n                  responsive : true,\n                  maintainAspectRatio : true\n                }}\n              />\n            </div>\n          );\n\n\n    }\n\n    prepare_bowlstats(){\n\n        if(this.state.display_bowlstats){\n            this.setState({\n\n                display_bowlstats : false,\n                prompt_string2 : \" display bowl stats\"\n\n            })\n\n        }\n        else{\n            this.setState({\n\n                display_bowlstats : true,\n                prompt_string2 : \" hide display bowl stats\"\n\n            })\n\n\n        }\n\n\n\n\n    }\n\n    bowling_stats_display(){\n\n        if(!this.state.display_bowlstats) return (<></>)\n        console.log(\"Printing from player\",this.state.bowl_runs)\n        console.log(this.state.match_ids)\n        const state = {\n            labels: this.state.bowl_matchids,\n            datasets: [\n              {\n                label: 'Bowling stats',\n                yAxisID : 'A' ,\n                backgroundColor: 'rgba(75,192,192,0.5)',\n                borderColor: 'rgba(0,0,0,1)',\n                borderWidth: 2,\n                data: this.state.bowl_runs\n              } ,\n              {\n                type : 'line',\n                label : 'Wickets',\n                yAxisID : 'B' ,\n                backgroundColor: 'rgba(0,0,0,1)',\n                borderColor: 'rgba(0,0,0,1)',\n                borderWidth: 2,\n                data: this.state.bowl_match_wickets,\n                pointRadius : 5\n\n              }\n            ]\n          }\n\n          return (\n            <div style={{height: \"300px\", width :\"80%\"}}>\n              <Bar\n                data={state}\n                options={{\n                  title:{\n                    display:true,\n                    text:'Average Rainfall per month',\n                    fontSize:20\n                  },\n                  legend:{\n                    display:true,\n                    position:'right'\n                  },\n                  displayPosition : true,\n                  scales : {\n                    yAxis: {\n                     \n                      id: 'A',\n                      type: 'linear',\n                      position: 'Right',\n                    }\n\n                  },\n                 \n                  maintainAspectRatio : false \n                }}\n              />\n            </div>\n          );\n\n\n\n    }\n\n\n    \n\n\n    render(){\n\n        if(!(this.state.req1 && this.state.req2 && this.state.req3)) return (<div>Data not loaded</div>)\n        \n        const mydata = this.state.player_data[0];\n    \n        return (     \n        <>\n            \n\n           <section>\n               <h1 style={{\"text-align\":'center'}}>Player Basic Information</h1>\n                <ul>\n                    <li>Player name : {mydata.player_name} </li>\n                    <li>Country : {mydata.country_name}</li>\n                    <li>Batting Style : {mydata.batting_hand}</li>\n                    <li>Bowling Skill :{mydata.bowling_skill}</li>\n                </ul>\n            \n           </section>\n\n           <section>\n               <h1 style={{\"text-align\":'center'}}>Player Batting statistics</h1>\n               <ul>\n               <li> Matches : {this.state.num_matches}</li>\n               <li> Runs : {this.state.total_runs}</li>\n               <li> Four : {this.state.num_runs_four}</li>\n               <li> Six : {this.state.num_runs_six}</li>\n               <li> Fifty : {this.state.num_fifty}</li>\n               <li> Hs : {this.state.highest_score}</li>\n               <li> Strike Rate : {this.state.strike_rate}</li>\n               <li> Average : {this.state.avg}</li>\n               </ul>\n\n               <Button onClick={this.prepare_batstats }>{this.state.prompt_string1}</Button>\n                {< this.batting_stats_display />}\n\n           </section>\n          \n           <section>\n               <h1 style={{\"text-align\":'center'}} >Player Bowling statistics</h1>\n               <ul>\n                <li>Matches : {this.state.bowl_nmatches}</li>\n                <li>Runs : {this.state.bowl_balls}</li>\n                <li>Overs :{this.state.bowl_overs}</li>\n                <li>Wickets : {this.state.bowl_wickets}</li>\n                <li>Economy : {this.state.bowl_economy}</li>\n                <li>Five Wickets : {this.state.bowl_fivewickets}</li>\n                </ul>\n\n                <Button onClick={this.prepare_bowlstats} >{this.state.prompt_string2}</Button>\n                {< this.bowling_stats_display />}\n           </section>\n\n        </>\n\n\n        )\n\n    }\n\n\n\n\n\n}\n\nexport default (props) => (\n    <Playerinfo\n        {...props}\n        params={useParams()}\n    />\n);"]},"metadata":{},"sourceType":"module"}