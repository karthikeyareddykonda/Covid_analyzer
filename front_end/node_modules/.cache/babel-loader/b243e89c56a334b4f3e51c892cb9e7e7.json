{"ast":null,"code":"var _jsxFileName = \"/home/karthikeya/Desktop/cs387/project/front_end/src/Country/Country_status.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { default as ReactSelect } from \"react-select\";\nimport { Button } from 'react-bootstrap';\nimport { components } from \"react-select\";\nimport { Bar } from \"react-chartjs-2\";\nimport { BrowserRouter as Router, Routes, Route, Link, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst country_options = [{\n  value: \"India\",\n  label: \"India\"\n}, {\n  value: \"China\",\n  label: \"China\"\n}, {\n  value: \"Russia\",\n  label: \"Russia\"\n}, {\n  value: \"Australia\",\n  label: \"Australia\"\n}, {\n  value: \"Canada\",\n  label: \"Canada\"\n}, {\n  value: \"United States\",\n  label: \"USA\"\n}];\n\nconst Option = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(components.Option, { ...props,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: props.isSelected,\n        onChange: () => null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"label\", {\n        children: props.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 7\n  }, this);\n};\n\n_c = Option;\n\nclass Country_status extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = selected => {\n      this.setState({\n        country: selected\n      });\n    };\n\n    this.state = {\n      name: \"India\",\n      country: \"India\",\n      req1: false,\n      data: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.get_data = this.get_data.bind(this);\n    this.display_data = this.display_data.bind(this);\n    console.log(\"This is country status constructor\");\n  }\n\n  componentDidMount() {// do nothing as of now \n  }\n\n  get_data() {\n    this.setState({\n      req1: false\n    });\n    var loc_c = \"India\";\n\n    if (typeof this.state.country.value !== 'undefined') {\n      loc_c = this.state.country.value;\n    }\n\n    var url = 'http://10.42.0.51:8000/summary/' + loc_c;\n    console.log(\"req url\", url);\n    fetch(url).then(Response => Response.json()).then(json => {\n      const tp = JSON.parse(json);\n      console.log(tp);\n      this.setState({\n        req1: true,\n        data: tp\n      });\n    });\n  }\n\n  display_data() {\n    if (!this.state.req1) return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" Select the country\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 40\n      }, this)\n    }, void 0, false);\n    const mydata = {\n      labels: ['Ventilators', 'oxygen cylinder'],\n      datasets: [{\n        label: 'Demand',\n        backgroundColor: 'rgba(75,192,192,0.5)',\n        borderColor: 'rgba(0,0,0,1)',\n        borderWidth: 2,\n        data: [this.state.data.Ventilators[0], this.state.data['oxygen cylinder'][0]]\n      }, {\n        type: 'line',\n        label: 'Supply',\n        backgroundColor: 'rgba(0,0,0,1)',\n        borderColor: 'rgba(0,0,0,1)',\n        borderWidth: 2,\n        data: [this.state.data.Ventilators[1], this.state.data['oxygen cylinder'][1]]\n      }]\n    };\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\" Total cases :  \", this.state.data.total_cases]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\" Total Deaths : \", this.state.data.total_deaths, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: \"300px\",\n          width: \"80%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Bar, {\n          data: mydata,\n          options: {\n            title: {\n              display: true,\n              text: 'Demand SUpply',\n              fontSize: 20\n            },\n            legend: {\n              display: true,\n              position: 'right'\n            },\n            displayPosition: true,\n            maintainAspectRatio: false\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Country page \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: this.get_data,\n        children: \" Get Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"d-inline-block\",\n        \"data-toggle\": \"popover\",\n        \"data-trigger\": \"focus\",\n        \"data-content\": \"Please selecet account(s)\",\n        children: /*#__PURE__*/_jsxDEV(ReactSelect, {\n          options: country_options,\n          closeMenuOnSelect: false,\n          hideSelectedOptions: false,\n          components: {\n            Option\n          },\n          onChange: this.handleChange,\n          allowSelectAll: true,\n          value: this.state.country\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(this.display_data, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default _s(props => {\n  _s();\n\n  return /*#__PURE__*/_jsxDEV(Country_status, { ...props,\n    params: useParams()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 243,\n    columnNumber: 5\n  }, this);\n}, \"zmUErVVHtqqM6DIDQ9M8H17P2nM=\", false, function () {\n  return [useParams];\n});\n\nvar _c;\n\n$RefreshReg$(_c, \"Option\");","map":{"version":3,"sources":["/home/karthikeya/Desktop/cs387/project/front_end/src/Country/Country_status.js"],"names":["React","default","ReactSelect","Button","components","Bar","BrowserRouter","Router","Routes","Route","Link","useParams","country_options","value","label","Option","props","isSelected","Country_status","Component","constructor","handleChange","selected","setState","country","state","name","req1","data","bind","get_data","display_data","console","log","componentDidMount","loc_c","url","fetch","then","Response","json","tp","JSON","parse","mydata","labels","datasets","backgroundColor","borderColor","borderWidth","Ventilators","type","total_cases","total_deaths","height","width","title","display","text","fontSize","legend","position","displayPosition","maintainAspectRatio","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { default as ReactSelect } from \"react-select\";\nimport {Button} from 'react-bootstrap';\nimport { components } from \"react-select\";\nimport {Bar} from \"react-chartjs-2\"\nimport {\n    BrowserRouter as Router ,\n    Routes,\n    Route,\n    Link,\n    useParams\n  \n  } from 'react-router-dom' ;\n\n\n  const country_options = [\n    { value: \"India\", label: \"India\" },\n    { value: \"China\", label: \"China\" },\n    { value: \"Russia\", label: \"Russia\" },\n    { value: \"Australia\", label: \"Australia\"},\n    { value: \"Canada\", label: \"Canada\"},\n    { value: \"United States\", label : \"USA\"}\n  ];\n\n\n  const Option = (props) => {\n    return (\n      <div>\n        <components.Option {...props}>\n          <input\n            type=\"checkbox\"\n            checked={props.isSelected}\n            onChange={() => null}\n          />{\" \"}\n          <label>{props.label}</label>\n        </components.Option>\n      </div>\n    );\n  };\n\nclass Country_status extends React.Component{\n\n    constructor(props){\n\n        super(props); \n\n        this.state = {\n            name : \"India\",\n            country: \"India\" ,\n            req1 : false ,\n            data : []\n        }\n\n        this.handleChange = this.handleChange.bind(this) ;\n        this.get_data = this.get_data.bind(this) ;\n        this.display_data = this.display_data.bind(this) ;\n        console.log(\"This is country status constructor\") ;\n\n    }\n\n    componentDidMount(){\n\n        // do nothing as of now \n\n    }\n\n    handleChange = selected => {\n        this.setState({\n          country : selected\n        });\n\n       \n\n        \n\n      };\n\n\n    get_data(){\n\n        this.setState({\n            req1 : false \n        })\n        var loc_c = \"India\" ;\n        if(typeof(this.state.country.value) !== 'undefined'){\n\n            loc_c = this.state.country.value ;\n          }\n        var url = 'http://10.42.0.51:8000/summary/'+ loc_c ;\n        console.log(\"req url\",url) ;\n\n        fetch(url)\n        .then((Response) => Response.json())\n        .then((json) => {\n\n            const tp  = JSON.parse(json);\n\n            console.log(tp) ;\n\n            this.setState({\n                req1 : true ,\n                data : tp\n\n            })\n           \n            \n            \n            \n        })\n\n\n    }\n\n    display_data(){\n\n        if(!this.state.req1) return (<><p> Select the country</p></>)\n\n\n        const mydata = {\n            labels: ['Ventilators','oxygen cylinder'],\n            datasets: [\n              {\n                label: 'Demand',\n                backgroundColor: 'rgba(75,192,192,0.5)',\n                borderColor: 'rgba(0,0,0,1)',\n                borderWidth: 2,\n                data: [this.state.data.Ventilators[0],this.state.data['oxygen cylinder'][0]]\n              } ,\n              {\n                type : 'line',\n                label : 'Supply',\n                backgroundColor: 'rgba(0,0,0,1)',\n                borderColor: 'rgba(0,0,0,1)',\n                borderWidth: 2,\n                data: [this.state.data.Ventilators[1],this.state.data['oxygen cylinder'][1]]\n              \n\n              }\n            ]\n          }\n\n        return(\n            <>\n            \n            <ul>\n                <li> Total cases :  {this.state.data.total_cases}</li>\n                <li> Total Deaths : {this.state.data.total_deaths} </li>\n                \n\n\n            </ul>\n\n            <div style={{height: \"300px\", width :\"80%\"}}>\n              <Bar\n                data={mydata}\n                options={{\n                  title:{\n                    display:true,\n                    text:'Demand SUpply',\n                    fontSize:20\n                  },\n                  legend:{\n                    display:true,\n                    position:'right'\n                  },\n                  displayPosition : true,\n                  \n                 \n                  maintainAspectRatio : false \n                }}\n              />\n            </div>\n            \n            \n            \n            \n            </>\n        \n\n\n        )\n\n    }\n\n    render(){\n\n\n        return(\n\n            <>\n            \n            \n            \n                <h1> Country page </h1>\n\n                <Button onClick={this.get_data}> Get Data</Button>\n                <br></br>\n                <span\n        className=\"d-inline-block\"\n        data-toggle=\"popover\"\n        data-trigger=\"focus\"\n        data-content=\"Please selecet account(s)\"\n      >\n        \n        <ReactSelect\n                options={country_options}\n              \n                closeMenuOnSelect={false}\n                hideSelectedOptions={false}\n                components={{\n                    Option\n                }}\n                onChange={this.handleChange}\n                allowSelectAll={true}\n                value={this.state.country}\n             />\n\n\n      </span>\n\n\n                \n\n                {<this.display_data  />}\n            \n            \n            \n            </>\n\n\n\n\n\n        )\n    }\n\n}\n\n\n\nexport default (props) => (\n    <Country_status\n        {...props}\n        params={useParams()}\n    />\n);"]},"metadata":{},"sourceType":"module"}