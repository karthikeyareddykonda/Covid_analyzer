{"ast":null,"code":"var _jsxFileName = \"/home/karthikeya/Desktop/cs387/project/front_end/src/Country/Country_status.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { default as ReactSelect } from \"react-select\";\nimport { Button } from 'react-bootstrap';\nimport { components } from \"react-select\";\nimport { BrowserRouter as Router, Routes, Route, Link, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst country_options = [{\n  value: \"India\",\n  label: \"India\"\n}, {\n  value: \"China\",\n  label: \"China\"\n}, {\n  value: \"Russia\",\n  label: \"Russia\"\n}, {\n  value: \"Australia\",\n  label: \"Australia\"\n}, {\n  value: \"Canada\",\n  label: \"Canada\"\n}, {\n  value: \"United States\",\n  label: \"USA\"\n}];\n\nconst Option = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(components.Option, { ...props,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: props.isSelected,\n        onChange: () => null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"label\", {\n        children: props.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 7\n  }, this);\n};\n\n_c = Option;\n\nclass Country_status extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = selected => {\n      this.setState({\n        country: selected\n      });\n    };\n\n    this.state = {\n      name: \"India\",\n      country: \"India\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    console.log(\"This is country status constructor\");\n  }\n\n  componentDidMount() {// do nothing as of now \n  }\n\n  get_data() {\n    var loc_c = \"India\";\n\n    if (typeof this.state.country !== 'undefined') {\n      loc_c = this.state.country;\n    }\n\n    var url = 'summary/' + loc_c;\n    console.log(\"req url\", url);\n    fetch(url).then(Response => Response.json()).then(json => {\n      const tp = JSON.parse(json);\n      console.log(tp);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Country page \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: this.get_data,\n        children: \" Get Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"d-inline-block\",\n        \"data-toggle\": \"popover\",\n        \"data-trigger\": \"focus\",\n        \"data-content\": \"Please selecet account(s)\",\n        children: /*#__PURE__*/_jsxDEV(ReactSelect, {\n          options: country_options,\n          closeMenuOnSelect: false,\n          hideSelectedOptions: false,\n          components: {\n            Option\n          },\n          onChange: this.handleChange,\n          allowSelectAll: true,\n          value: this.state.country\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \" Total cases : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \" Active cases : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \" Hospital Beds availability :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \" Vaccination :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \" Oxygen Demand :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \" Oxygen Supply : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default _s(props => {\n  _s();\n\n  return /*#__PURE__*/_jsxDEV(Country_status, { ...props,\n    params: useParams()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 5\n  }, this);\n}, \"zmUErVVHtqqM6DIDQ9M8H17P2nM=\", false, function () {\n  return [useParams];\n});\n\nvar _c;\n\n$RefreshReg$(_c, \"Option\");","map":{"version":3,"sources":["/home/karthikeya/Desktop/cs387/project/front_end/src/Country/Country_status.js"],"names":["React","default","ReactSelect","Button","components","BrowserRouter","Router","Routes","Route","Link","useParams","country_options","value","label","Option","props","isSelected","Country_status","Component","constructor","handleChange","selected","setState","country","state","name","bind","console","log","componentDidMount","get_data","loc_c","url","fetch","then","Response","json","tp","JSON","parse","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { default as ReactSelect } from \"react-select\";\nimport {Button} from 'react-bootstrap';\nimport { components } from \"react-select\";\nimport {\n    BrowserRouter as Router ,\n    Routes,\n    Route,\n    Link,\n    useParams\n  \n  } from 'react-router-dom' ;\n\n\n  const country_options = [\n    { value: \"India\", label: \"India\" },\n    { value: \"China\", label: \"China\" },\n    { value: \"Russia\", label: \"Russia\" },\n    { value: \"Australia\", label: \"Australia\"},\n    { value: \"Canada\", label: \"Canada\"},\n    { value: \"United States\", label : \"USA\"}\n  ];\n\n\n  const Option = (props) => {\n    return (\n      <div>\n        <components.Option {...props}>\n          <input\n            type=\"checkbox\"\n            checked={props.isSelected}\n            onChange={() => null}\n          />{\" \"}\n          <label>{props.label}</label>\n        </components.Option>\n      </div>\n    );\n  };\n\nclass Country_status extends React.Component{\n\n    constructor(props){\n\n        super(props); \n\n        this.state = {\n            name : \"India\",\n            country: \"India\" \n        }\n\n        this.handleChange = this.handleChange.bind(this) ;\n        console.log(\"This is country status constructor\") ;\n\n    }\n\n    componentDidMount(){\n\n        // do nothing as of now \n\n    }\n\n    handleChange = selected => {\n        this.setState({\n          country : selected\n        });\n\n       \n\n        \n\n      };\n\n\n    get_data(){\n\n        var loc_c = \"India\" ;\n        if(typeof(this.state.country) !== 'undefined'){\n\n            loc_c = this.state.country ;\n          }\n        var url = 'summary/'+ loc_c ;\n        console.log(\"req url\",url) ;\n\n        fetch(url)\n        .then((Response) => Response.json())\n        .then((json) => {\n\n            const tp  = JSON.parse(json);\n\n            console.log(tp) ;\n           \n            \n            \n            \n        })\n\n\n    }\n\n    render(){\n\n\n        return(\n\n            <>\n            \n            \n            \n                <h1> Country page </h1>\n\n                <Button onClick={this.get_data}> Get Data</Button>\n                <br></br>\n                <span\n        className=\"d-inline-block\"\n        data-toggle=\"popover\"\n        data-trigger=\"focus\"\n        data-content=\"Please selecet account(s)\"\n      >\n        \n        <ReactSelect\n                options={country_options}\n              \n                closeMenuOnSelect={false}\n                hideSelectedOptions={false}\n                components={{\n                    Option\n                }}\n                onChange={this.handleChange}\n                allowSelectAll={true}\n                value={this.state.country}\n             />\n\n\n      </span>\n\n\n                \n\n                <ul>\n                    <li> Total cases : </li>\n                    <li> Active cases : </li>\n                    <li> Hospital Beds availability :</li>\n                    <li> Vaccination :</li>\n                    <li> Oxygen Demand :</li>\n                    <li> Oxygen Supply : </li>\n\n\n                </ul>\n            \n            \n            \n            </>\n\n\n\n\n\n        )\n    }\n\n}\n\n\n\nexport default (props) => (\n    <Country_status\n        {...props}\n        params={useParams()}\n    />\n);"]},"metadata":{},"sourceType":"module"}