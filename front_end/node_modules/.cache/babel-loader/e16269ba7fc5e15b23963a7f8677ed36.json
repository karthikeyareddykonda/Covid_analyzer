{"ast":null,"code":"var _jsxFileName = \"/home/karthikeya/Desktop/cs387/project/front_end/src/Stats/Stats_info.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport makeAnimated from \"react-select/animated\";\nimport { default as ReactSelect } from \"react-select\";\nimport { DateRangePicker } from 'react-date-range';\nimport { components } from \"react-select\";\nimport { Button } from 'react-bootstrap';\nimport { BrowserRouter as Router, Routes, Route, Link, useParams } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Chart as ChartJS } from 'chart.js/auto';\nimport { Line } from \"react-chartjs-2\";\nimport Country_info from \"../Country/Country_info\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst colourOptions = [{\n  value: \"India\",\n  label: \"India\"\n}, {\n  value: \"China\",\n  label: \"China\"\n}, {\n  value: \"Russia\",\n  label: \"Russia\"\n}, {\n  value: \"Australia\",\n  label: \"Australia\"\n}, {\n  value: \"Canada\",\n  label: \"Canada\"\n}];\nconst statOptions = [{\n  value: 1,\n  label: \"Deaths\"\n}, {\n  value: 2,\n  label: \"Active cases\"\n}];\n\nconst Option = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(components.Option, { ...props,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: props.isSelected,\n        onChange: () => null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"label\", {\n        children: props.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 7\n  }, this);\n};\n\n_c = Option;\n\nclass Stats_info extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = selected => {\n      this.setState({\n        Country_Selected: selected\n      });\n    };\n\n    this.handleChange2 = selected => {\n      this.setState({\n        Stat_options: selected\n      });\n    };\n\n    this.state = {\n      name: \"India\",\n      Country_Selected: [],\n      Stat_options: [],\n      all_req: false,\n      date_range: [],\n      graph_data: null\n    };\n    this.get_data = this.get_data.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleChange2 = this.handleChange2.bind(this);\n    this.handleSelect = this.handleSelect.bind(this);\n    this.display_graph = this.display_graph.bind(this);\n  }\n\n  handleSelect(date) {\n    console.log(\"date selector\", date); // native Date object\n\n    this.setState({\n      date_range: date\n    });\n  }\n\n  get_data() {\n    this.setState({\n      all_req: false\n    });\n    console.log(\"called get data\");\n    console.log(this.state.Country_Selected);\n    console.log(this.state.date_range);\n    var graph_data = {\n      datasets: []\n    };\n    graph_data.datasets = [];\n    console.log('from dataset', graph_data.datasets.length);\n    let countries = this.state.Country_Selected;\n    let p = Object.values(this.state.date_range)[0];\n    let p3 = JSON.stringify(p.endDate);\n    let p2 = JSON.stringify(p.startDate);\n\n    for (var i = 0; i < countries.length; i++) {\n      console.log(countries[i].value);\n      var this_data = [];\n      fetch(`http://10.42.0.51:8000/country/${countries[i].value}/type/new_cases/variant/alpha/start/${p2}/end/${p3}`).then(Response => Response.json()).then(json => {\n        let tp = JSON.parse(json);\n        console.log(tp);\n\n        for (var j = 0; j < tp.length; j++) {\n          this_data.push(tp[j][0]);\n          console.log(tp[j][0]);\n        }\n      });\n      console.log(\"this data\", this_data);\n      console.log(\"Received data\", tp);\n      graph_data.datasets[i] = {\n        label: countries[i].value,\n        data: this_data,\n        fill: false,\n        backgroundColor: \"rgba(75,192,192,0.2)\",\n        borderColor: \"rgba(75,192,192,1)\"\n      };\n    }\n\n    console.log(\"graph data\", graph_data);\n    this.setState({\n      graph_data: graph_data,\n      all_req: true\n    });\n  }\n\n  display_graph() {\n    if (!this.state.all_req) return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"Waiting for data\"\n    }, void 0, false);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: this.state.graph_data.datasets.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        data: this.state.graph_data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true);\n  }\n\n  componentDidMount() {// do nothing as of now \n  }\n\n  render() {\n    const selectionRange = {\n      startDate: new Date(),\n      endDate: new Date(),\n      key: 'selection'\n    };\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(this.display_graph, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Stats page \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: this.get_data,\n        children: \" Get the data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Select Countries\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"d-inline-block\",\n        \"data-toggle\": \"popover\",\n        \"data-trigger\": \"focus\",\n        \"data-content\": \"Please selecet account(s)\",\n        children: /*#__PURE__*/_jsxDEV(ReactSelect, {\n          options: colourOptions,\n          isMulti: true,\n          closeMenuOnSelect: false,\n          hideSelectedOptions: false,\n          components: {\n            Option\n          },\n          onChange: this.handleChange,\n          allowSelectAll: true,\n          value: this.state.optionSelected\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Select Statistic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"d-inline-block\",\n        \"data-toggle\": \"popover\",\n        \"data-trigger\": \"focus\",\n        \"data-content\": \"Please selecet account(s)\",\n        children: /*#__PURE__*/_jsxDEV(ReactSelect, {\n          options: statOptions,\n          closeMenuOnSelect: false,\n          hideSelectedOptions: false,\n          components: {\n            Option\n          },\n          onChange: this.handleChange2,\n          value: this.state.Stat_options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" Select the date range \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(DateRangePicker, {\n        ranges: [selectionRange],\n        onChange: this.handleSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default _s(props => {\n  _s();\n\n  return /*#__PURE__*/_jsxDEV(Stats_info, { ...props,\n    params: useParams()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 308,\n    columnNumber: 5\n  }, this);\n}, \"zmUErVVHtqqM6DIDQ9M8H17P2nM=\", false, function () {\n  return [useParams];\n});\n\nvar _c;\n\n$RefreshReg$(_c, \"Option\");","map":{"version":3,"sources":["/home/karthikeya/Desktop/cs387/project/front_end/src/Stats/Stats_info.js"],"names":["React","makeAnimated","default","ReactSelect","DateRangePicker","components","Button","BrowserRouter","Router","Routes","Route","Link","useParams","Chart","ChartJS","Line","Country_info","colourOptions","value","label","statOptions","Option","props","isSelected","Stats_info","Component","constructor","handleChange","selected","setState","Country_Selected","handleChange2","Stat_options","state","name","all_req","date_range","graph_data","get_data","bind","handleSelect","display_graph","date","console","log","datasets","length","countries","p","Object","values","p3","JSON","stringify","endDate","p2","startDate","i","this_data","fetch","then","Response","json","tp","parse","j","push","data","fill","backgroundColor","borderColor","componentDidMount","render","selectionRange","Date","key","optionSelected"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport makeAnimated from \"react-select/animated\";\nimport { default as ReactSelect } from \"react-select\";\nimport { DateRangePicker } from 'react-date-range';\nimport { components } from \"react-select\";\nimport {Button} from 'react-bootstrap';\nimport {\n    BrowserRouter as Router ,\n    Routes,\n    Route,\n    Link,\n    useParams\n  \n  } from 'react-router-dom' ;\n\n  import 'bootstrap/dist/css/bootstrap.min.css';\nimport { Chart as ChartJS } from 'chart.js/auto'\nimport { Line } from \"react-chartjs-2\";\n\nimport Country_info from \"../Country/Country_info\";\n\n\n  const colourOptions = [\n    { value: \"India\", label: \"India\" },\n    { value: \"China\", label: \"China\" },\n    { value: \"Russia\", label: \"Russia\" },\n    { value: \"Australia\", label: \"Australia\"},\n    { value: \"Canada\", label: \"Canada\"}\n  ];\n\n  const statOptions = [\n    { value : 1 , label : \"Deaths\" },\n    { value : 2, label : \"Active cases\"}\n    \n\n  ]\n\n  const Option = (props) => {\n    return (\n      <div>\n        <components.Option {...props}>\n          <input\n            type=\"checkbox\"\n            checked={props.isSelected}\n            onChange={() => null}\n          />{\" \"}\n          <label>{props.label}</label>\n        </components.Option>\n      </div>\n    );\n  };\n\n\nclass Stats_info extends React.Component{\n\n    constructor(props){\n\n        super(props); \n\n        this.state = {\n            name : \"India\",\n            Country_Selected: [],\n            Stat_options : [],\n            all_req : false,\n            date_range : [],\n            graph_data : null \n\n        }\n        \n\n        \n\n        \n\n        this.get_data = this.get_data.bind(this) ;\n        this.handleChange = this.handleChange.bind(this) ;\n        this.handleChange2 = this.handleChange2.bind(this) ;\n        this.handleSelect = this.handleSelect.bind(this) ;\n\n        this.display_graph = this.display_graph.bind(this) ;\n\n    }\n\n    handleChange = selected => {\n        this.setState({\n          Country_Selected: selected\n        });\n\n       \n\n        \n\n      };\n\n    handleChange2 = selected => {\n      this.setState({\n\n        Stat_options : selected\n\n\n      })\n     \n      \n    }\n\n    handleSelect(date){\n      console.log(\"date selector\",date); // native Date object\n\n      this.setState({\n        date_range: date\n      })\n    \n    \n  }\n\n\n    get_data(){\n\n\n      this.setState({\n        all_req : false \n      })\n      console.log(\"called get data\") ;\n\n      console.log(this.state.Country_Selected) ;\n\n      console.log(this.state.date_range) ;\n\n      var graph_data = {\n        \n        datasets: [\n         \n        ]\n      };\n\n      graph_data.datasets= [];\n\n      console.log('from dataset',graph_data.datasets.length);\n\n      let countries = this.state.Country_Selected ;\n      let p = Object.values(this.state.date_range)[0];\n      let p3 = JSON.stringify(p.endDate);\n        let p2 = JSON.stringify(p.startDate);\n      for(var i = 0 ; i < countries.length ; i++ ){\n\n        console.log(countries[i].value);\n\n        var this_data = [] ;\n        fetch(`http://10.42.0.51:8000/country/${countries[i].value}/type/new_cases/variant/alpha/start/${p2}/end/${p3}`)\n        .then((Response) => Response.json())\n        .then((json) => {\n\n            let tp  = JSON.parse(json);\n           \n            console.log(tp);\n            for(var j =0 ;j <tp.length;j++){\n\n              this_data.push(tp[j][0]);\n              console.log(tp[j][0]) ;\n\n             \n\n            }\n\n\n\n            \n        })\n\n        console.log(\"this data\",this_data);\n        console.log(\"Received data\", tp) ;\n        graph_data.datasets[i] =  {\n          label: countries[i].value,\n          data: this_data,\n          fill: false,\n          backgroundColor: \"rgba(75,192,192,0.2)\",\n          borderColor: \"rgba(75,192,192,1)\"\n        }\n        \n\n\n\n      }\n\n      console.log(\"graph data\",graph_data) ;\n\n      this.setState({\n\n        graph_data : graph_data ,\n        all_req : true \n\n      })\n\n\n\n\n    }\n\n    display_graph(){\n\n      if(!this.state.all_req) return(<>Waiting for data</>) ;\n\n\n      return(\n\n        <>\n        \n          \n          <h1>{this.state.graph_data.datasets.length}</h1>\n\n          <Line  data={this.state.graph_data}/>\n        \n        </>\n\n      )\n\n    }\n\n    componentDidMount(){\n\n        // do nothing as of now \n\n    }\n\n    render(){\n      const selectionRange = {\n        startDate: new Date(),\n        endDate: new Date(),\n        key: 'selection',\n      }\n\n        return(\n\n            <>\n            \n              {< this.display_graph />} \n            \n                <h1> Stats page </h1>\n\n\n                <Button onClick={this.get_data} > Get the data</Button>\n                <p>Select Countries</p>\n                <span\n        className=\"d-inline-block\"\n        data-toggle=\"popover\"\n        data-trigger=\"focus\"\n        data-content=\"Please selecet account(s)\"\n      >\n        <ReactSelect\n          options={colourOptions}\n          isMulti\n          closeMenuOnSelect={false}\n          hideSelectedOptions={false}\n          components={{\n            Option\n          }}\n          onChange={this.handleChange}\n          allowSelectAll={true}\n          value={this.state.optionSelected}\n        />\n      </span>\n\n          <br></br>\n          <p>Select Statistic</p>\n      <span\n        className=\"d-inline-block\"\n        data-toggle=\"popover\"\n        data-trigger=\"focus\"\n        data-content=\"Please selecet account(s)\"\n      >\n        <ReactSelect\n          options={statOptions}\n         \n          closeMenuOnSelect={false}\n          hideSelectedOptions={false}\n          components={{\n            Option\n          }}\n          onChange={this.handleChange2}\n        \n          value={this.state.Stat_options}\n        />\n      </span>\n\n      <p> Select the date range </p>\n      <DateRangePicker\n        ranges={[selectionRange]}\n        onChange={this.handleSelect}\n      />\n            \n            \n            \n            </>\n\n\n\n\n\n        )\n    }\n\n}\n\n\n\nexport default (props) => (\n    <Stats_info\n        {...props}\n        params={useParams()}\n    />\n);"]},"metadata":{},"sourceType":"module"}