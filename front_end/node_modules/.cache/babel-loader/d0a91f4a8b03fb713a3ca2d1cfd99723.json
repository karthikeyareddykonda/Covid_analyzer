{"ast":null,"code":"var _jsxFileName = \"/home/karthikeya/Desktop/cs387/project/front/src/Stats/Stats_info.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport makeAnimated from \"react-select/animated\";\nimport MySelect from \"./MySelect.js\";\nimport { components } from \"react-select\";\nimport { BrowserRouter as Router, Routes, Route, Link, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst colourOptions = [{\n  value: \"ocean1\",\n  label: \"Ocean\"\n}, {\n  value: \"blue\",\n  label: \"Blue\"\n}, {\n  value: \"purple\",\n  label: \"Purple\"\n}, {\n  value: \"red\",\n  label: \"Red\"\n}, {\n  value: \"orange\",\n  label: \"Orange\"\n}, {\n  value: \"yellow\",\n  label: \"Yellow\"\n}, {\n  value: \"green\",\n  label: \"Green\"\n}, {\n  value: \"forest\",\n  label: \"Forest\"\n}, {\n  value: \"slate\",\n  label: \"Slate\"\n}, {\n  value: \"silver\",\n  label: \"Silver\"\n}];\n\nconst Option = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(components.Option, { ...props,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: props.isSelected,\n        onChange: () => null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"label\", {\n        children: props.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 7\n  }, this);\n};\n\n_c = Option;\n\nconst MultiValue = props => /*#__PURE__*/_jsxDEV(components.MultiValue, { ...props,\n  children: /*#__PURE__*/_jsxDEV(\"span\", {\n    children: props.data.label\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 7\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 44,\n  columnNumber: 5\n}, this);\n\n_c2 = MultiValue;\nconst animatedComponents = makeAnimated();\n\nclass Stats_info extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = selected => {\n      this.setState({\n        optionSelected: selected\n      });\n    };\n\n    this.state = {\n      name: \"India\",\n      optionSelected: null\n    };\n    console.log(\"This is country constructor\");\n  }\n\n  componentDidMount() {// do nothing as of now \n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Stats page \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default _s(props => {\n  _s();\n\n  return /*#__PURE__*/_jsxDEV(Stats_info, { ...props,\n    params: useParams()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n}, \"zmUErVVHtqqM6DIDQ9M8H17P2nM=\", false, function () {\n  return [useParams];\n});\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Option\");\n$RefreshReg$(_c2, \"MultiValue\");","map":{"version":3,"sources":["/home/karthikeya/Desktop/cs387/project/front/src/Stats/Stats_info.js"],"names":["React","makeAnimated","MySelect","components","BrowserRouter","Router","Routes","Route","Link","useParams","colourOptions","value","label","Option","props","isSelected","MultiValue","data","animatedComponents","Stats_info","Component","constructor","handleChange","selected","setState","optionSelected","state","name","console","log","componentDidMount","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport makeAnimated from \"react-select/animated\";\nimport MySelect from \"./MySelect.js\";\nimport { components } from \"react-select\";\nimport {\n    BrowserRouter as Router ,\n    Routes,\n    Route,\n    Link,\n    useParams\n  \n  } from 'react-router-dom' ;\n\n  const colourOptions = [\n    { value: \"ocean1\", label: \"Ocean\" },\n    { value: \"blue\", label: \"Blue\" },\n    { value: \"purple\", label: \"Purple\" },\n    { value: \"red\", label: \"Red\" },\n    { value: \"orange\", label: \"Orange\" },\n    { value: \"yellow\", label: \"Yellow\" },\n    { value: \"green\", label: \"Green\" },\n    { value: \"forest\", label: \"Forest\" },\n    { value: \"slate\", label: \"Slate\" },\n    { value: \"silver\", label: \"Silver\" }\n  ];\n\n  const Option = (props) => {\n    return (\n      <div>\n        <components.Option {...props}>\n          <input\n            type=\"checkbox\"\n            checked={props.isSelected}\n            onChange={() => null}\n          />{\" \"}\n          <label>{props.label}</label>\n        </components.Option>\n      </div>\n    );\n  };\n\n  const MultiValue = props => (\n    <components.MultiValue {...props}>\n      <span>{props.data.label}</span>\n    </components.MultiValue>\n  );\n\n  const animatedComponents = makeAnimated();\nclass Stats_info extends React.Component{\n\n    constructor(props){\n\n        super(props); \n\n        this.state = {\n            name : \"India\",\n            optionSelected: null\n        }\n\n        console.log(\"This is country constructor\") ;\n\n    }\n\n    handleChange = selected => {\n        this.setState({\n          optionSelected: selected\n        });\n      };\n\n    componentDidMount(){\n\n        // do nothing as of now \n\n    }\n\n    render(){\n\n\n        return(\n\n            <>\n            \n            \n            \n                <h1> Stats page </h1>\n            \n            \n            \n            </>\n\n\n\n\n\n        )\n    }\n\n}\n\n\n\nexport default (props) => (\n    <Stats_info\n        {...props}\n        params={useParams()}\n    />\n);"]},"metadata":{},"sourceType":"module"}