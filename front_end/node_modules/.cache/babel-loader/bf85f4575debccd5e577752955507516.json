{"ast":null,"code":"var _jsxFileName = \"/home/karthikeya/Desktop/cs387/project/front/src/Playground/Playground.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport makeAnimated from \"react-select/animated\";\nimport { Chart as ChartJS } from 'chart.js/auto';\nimport { Line } from \"react-chartjs-2\";\nimport { BrowserRouter as Router, Routes, Route, Link, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst totalDuration = 1000;\nconst delayBetweenPoints = totalDuration / 5;\n\nconst previousY = ctx => ctx.index === 0 ? ctx.chart.scales.y.getPixelForValue(100) : ctx.chart.getDatasetMeta(ctx.datasetIndex).data[ctx.index - 1].getProps(['y'], true).y;\n\nconst animation = {\n  x: {\n    type: 'number',\n    easing: 'linear',\n    duration: delayBetweenPoints,\n    from: NaN,\n\n    // the point is initially skipped\n    delay(ctx) {\n      if (ctx.type !== 'data' || ctx.xStarted) {\n        return 0;\n      }\n\n      ctx.xStarted = true;\n      return ctx.index * delayBetweenPoints;\n    }\n\n  },\n  y: {\n    type: 'number',\n    easing: 'linear',\n    duration: delayBetweenPoints,\n    from: previousY,\n\n    delay(ctx) {\n      if (ctx.type !== 'data' || ctx.yStarted) {\n        return 0;\n      }\n\n      ctx.yStarted = true;\n      return ctx.index * delayBetweenPoints;\n    }\n\n  }\n};\n\nclass Playground extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"India\",\n      mydata: [33, 53, 85, 41, 44, 65]\n    };\n    this.data = [1, 2, 3, 4, 5, 6, 7, 8, 9, 1, 2, 4, 4, 5, 6];\n    console.log(\"This is Playground constructor\");\n  }\n\n  componentDidMount() {// do nothing as of now \n  }\n\n  render() {\n    const data = {\n      labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\"],\n      datasets: [{\n        label: \"First dataset\",\n        data: this.state.mydata,\n        fill: true,\n        backgroundColor: \"rgba(75,192,192,0.2)\",\n        borderColor: \"rgba(75,192,192,1)\"\n      }]\n    };\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Playground page \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: /*#__PURE__*/_jsxDEV(Line, {\n          data: data,\n          options: {\n            animations: animation\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default _s(props => {\n  _s();\n\n  return /*#__PURE__*/_jsxDEV(Playground, { ...props,\n    params: useParams()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n}, \"zmUErVVHtqqM6DIDQ9M8H17P2nM=\", false, function () {\n  return [useParams];\n});","map":{"version":3,"sources":["/home/karthikeya/Desktop/cs387/project/front/src/Playground/Playground.js"],"names":["React","makeAnimated","Chart","ChartJS","Line","BrowserRouter","Router","Routes","Route","Link","useParams","totalDuration","delayBetweenPoints","previousY","ctx","index","chart","scales","y","getPixelForValue","getDatasetMeta","datasetIndex","data","getProps","animation","x","type","easing","duration","from","NaN","delay","xStarted","yStarted","Playground","Component","constructor","props","state","name","mydata","console","log","componentDidMount","render","labels","datasets","label","fill","backgroundColor","borderColor","animations"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport makeAnimated from \"react-select/animated\";\nimport { Chart as ChartJS } from 'chart.js/auto'\nimport { Line } from \"react-chartjs-2\";\n\n\nimport {\n    BrowserRouter as Router ,\n    Routes,\n    Route,\n    Link,\n    useParams\n  \n  } from 'react-router-dom' ;\n\n\n\n  const totalDuration = 1000;\n  const delayBetweenPoints = totalDuration / 5;\n  const previousY = (ctx) => ctx.index === 0 ? ctx.chart.scales.y.getPixelForValue(100) : ctx.chart.getDatasetMeta(ctx.datasetIndex).data[ctx.index - 1].getProps(['y'], true).y;\n  const animation = {\n    x: {\n      type: 'number',\n      easing: 'linear',\n      duration: delayBetweenPoints,\n      from: NaN, // the point is initially skipped\n      delay(ctx) {\n        if (ctx.type !== 'data' || ctx.xStarted) {\n          return 0;\n        }\n        ctx.xStarted = true;\n        return ctx.index * delayBetweenPoints;\n      }\n    },\n    y: {\n      type: 'number',\n      easing: 'linear',\n      duration: delayBetweenPoints,\n      from: previousY,\n      delay(ctx) {\n        if (ctx.type !== 'data' || ctx.yStarted) {\n          return 0;\n        }\n        ctx.yStarted = true;\n        return ctx.index * delayBetweenPoints;\n      }\n    }\n  };\n\n\n\nclass Playground extends React.Component{\n\n    constructor(props){\n\n        super(props); \n\n        this.state = {\n            name : \"India\",\n            mydata : [33, 53, 85, 41, 44, 65]\n            \n        }\n\n        this.data = [1,2,3,4,5,6,7,8,9,1,2,4,4,5,6] ;\n\n        console.log(\"This is Playground constructor\") ;\n\n    }\n\n    \n\n    \n\n    componentDidMount(){\n\n        // do nothing as of now \n\n    }\n    \n    render(){\n       const  data = {\n            labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\"],\n            datasets: [\n              {\n                label: \"First dataset\",\n                data: this.state.mydata,\n                fill: true,\n                backgroundColor: \"rgba(75,192,192,0.2)\",\n                borderColor: \"rgba(75,192,192,1)\"\n              }\n            ]\n          };\n\n\n        return(\n\n            <>\n            \n            \n            \n                <h1> Playground page </h1>\n                <div className=\"App\">\n      <Line data={data}\n      \n      options = {{\n        \n        animations: animation\n        \n        \n      }}\n      \n      \n      \n      \n      />\n    </div>\n               \n        \n\n          \n      \n            \n            \n            \n            </>\n\n\n\n\n\n        )\n    }\n\n}\n\n\n\nexport default (props) => (\n    < Playground\n        {...props}\n        params={useParams()}\n    />\n);"]},"metadata":{},"sourceType":"module"}